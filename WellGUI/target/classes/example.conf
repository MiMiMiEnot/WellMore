title = "&cТестовое GUI"
command = "test"
rows = 6

// Обязательные аргументы
# (org.bukkit.Material) material - Материал в org.bukkit.Material
# (int) slots.X - слот по значению X
# (int) slots.Y - слот по значению Y
// Не обязательные аргументы
# (Integer) amount - количество
# (Short) data - особый показатель предмета (работает не для всех,
##работает как цвет шерсти и прочее, используеться для тех предметов что разные но имеют один айди
# (String) item-meta.display-name - название предмета
# (List<String>) item-meta.lore - описание предмета
# enchantments.<org.bukkit.enchantments.Enchantment> = int
##пример - enchantments.THORNS = 10
##будет эффект Шипы 10
# (me.enot.guiitem.utils.GUIItemLogicType) item-logic.type
## Типы:
### COMMAND
### OPEN
### SEND
# В случаи если item-logic.type указан нужно указывать следующий аргумент(-ы) в зависимости от типа

## COMMAND
### (me.enot.wellgui.gui.guiitem.utils.Executor) item-logic.executor
#### Типы:
##### PLAYER (от имени игрока)
##### CONSOLE (от консоли)
### (List<String> \ String) item-logic.commands
#### исполняет список команд

## OPEN
### (String) item-logic.id
#### Открывает GUI с определённым ID

## SEND
### (String) item-logic.server
#### название сервера в BungeeCord config.yml
### (int) item-logic.max-online
#### макс. кол-во игроков до которого будет пускать не зависимо от прав игрока, после - по праву с след. аргумента
### (String) item-logic.bypass-permission
#### Право, по которому будет перекидывать на сервер в случаи если онлайн сервера >= чем переменная item-logic.max-online

# (String) access-permission
## Право за котороым будет доступ использовать предмет
# (String \ List<String>) no-access
## Сообщение(-я) что будут добавлены к описанию в случаи если права access-permission нет
# (String \ List<String>) has-access
## Сообщение(-я) что будут добавлены к описанию в случаи если право access-permission есть


// Переменные в сообщениях
# {player} - ник игрока
# {online--[server]} - показывает онлайн на указанном сервере (пример - {online--duels1})

items {
  "1" {
    material = BEDROCK
    amount = 10
    item-meta {
      display-name = "&cОткрытие гуи"
      lore = [
        "&cСервер &4&lduels1"
        "&fОнлайн &4БЛА"
      ]
    }
    item-logic {
      type = OPEN
      id = example1
    }
    access-permission = "permission.example"
    no-access = [
      ""
      "&c&lНет прав"
    ]
    has-access = [
      ""
      "&a&lЕсть права"
    ]

    no-access-message = "&cУ тебя нет прав на использованние данного предмета"
    has-access-message = [
      "&cУ тебя нет прав"
      "&fПожалуйста, обратись к администарции в случаи, если права должны быть"
    ]
    slots {
      X = 2
      Y = 2
    }
  }
  "2" {
    material = DIRT
    item-meta {
      display-name = "&cКоманды"
      lore = [
        "&cСэй плээер"
        "&fПээээээээээпи"
      ]
    }
    item-logic {
      type = COMMAND
      executor = CONSOLE
      commands = [
        "say {player} дебил"
      ]
    }
    access-permission = "permission.example"
    no-access = [
      ""
      "&c&lНет прав"
    ]
    has-access = [
      ""
      "&a&lЕсть права"
    ]

    no-access-message = "&cУ тебя нет прав на использованние данного предмета"
    has-access-message = [
      "&cУ тебя нет прав"
      "&fПожалуйста, обратись к администарции в случаи, если права должны быть"
    ]
    slots {
      X = 3
      Y = 3
    }
  }
  "3" {
    material = DIRT
    item-logic {
      type = COMMAND
      executor = PLAYER
      commands = [
        "say {player} сказал что он дэбил "
      ]
    }
    access-permission = "permission.example"
    no-access = [
      ""
      "&c&lНет прав"
    ]
    has-access = [
      ""
      "&a&lЕсть права"
    ]
    slots {
      X = 4
      Y = 4
    }
  }
  empty1 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 1
      Y = 1
    }
  }
  empty2 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 2
      Y = 1
    }
  }
  empty3 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 3
      Y = 1
    }
  }
  empty4 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 4
      Y = 1
    }
  }
  empty5 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 5
      Y = 1
    }
  }
  empty6 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 6
      Y = 1
    }
  }
  empty7 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 7
      Y = 1
    }
  }
  empty8 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 8
      Y = 1
    }
  }
  empty9 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 9
      Y = 1
    }
  }
  empty10 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 1
      Y = 2
    }
  }
  empty11 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 1
      Y = 3
    }
  }
  empty12 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 1
      Y = 4
    }
  }
  empty13 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 1
      Y = 5
    }
  }
  empty14 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 1
      Y = 6
    }
  }
  empty15 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 9
      Y = 2
    }
  }
  empty16 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 9
      Y = 3
    }
  }
  empty17 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 9
      Y = 4
    }
  }
  empty18 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 9
      Y = 5
    }
  }
  empty19 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 9
      Y = 6
    }
  }
  empty20 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 2
      Y = 6
    }
  }
  empty21 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 3
      Y = 6
    }
  }
  empty22 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 4
      Y = 6
    }
  }
  empty23 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 5
      Y = 6
    }
  }
  empty24 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 6
      Y = 6
    }
  }
  empty25 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 7
      Y = 6
    }
  }
  empty26 {
    material = STAINED_GLASS_PANE
    item-meta {
      display-name = ""
    }
    data = 3
    slots {
      X = 8
      Y = 6
    }
  }
}